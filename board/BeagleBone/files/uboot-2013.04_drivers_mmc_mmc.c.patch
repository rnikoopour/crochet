diff --git a/drivers/mmc/mmc.c b/drivers/mmc/mmc.c
index f65a7b0..3613028 100644
--- a/drivers/mmc/mmc.c
+++ b/drivers/mmc/mmc.c
@@ -32,6 +32,15 @@
 #include <linux/list.h>
 #include <div64.h>
 
+#define DEBUG
+#undef DEBUG
+
+#ifdef DEBUG
+#define debugf(fmt, args...) do { printf("%s(): ", __func__); printf(fmt, ##args); } while (0)
+#else
+#define debugf(fmt, args...)
+#endif
+
 /* Set block count limit because of 16 bit register limit on some hardware*/
 #ifndef CONFIG_SYS_MMC_MAX_BLK_COUNT
 #define CONFIG_SYS_MMC_MAX_BLK_COUNT 65535
@@ -1265,9 +1274,14 @@ int mmc_register(struct mmc *mmc)
 block_dev_desc_t *mmc_get_dev(int dev)
 {
 	struct mmc *mmc = find_mmc_device(dev);
-	if (!mmc || mmc_init(mmc))
+	if (!mmc)
 		return NULL;
 
+	/* If mmc_init fails, mmc->block_dev will be of type
+	 * DEV_TYPE_UNKNOWN with blksz and lba set to zero.
+	 */
+	mmc_init(mmc);
+
 	return &mmc->block_dev;
 }
 #endif
@@ -1277,9 +1291,9 @@ int mmc_init(struct mmc *mmc)
 	int err;
 
 	if (mmc_getcd(mmc) == 0) {
-		mmc->has_init = 0;
-		printf("MMC: no card present\n");
-		return NO_CARD_ERR;
+		debugf("MMC: no card present\n");
+		err = NO_CARD_ERR;
+		goto done;
 	}
 
 	if (mmc->has_init)
@@ -1288,7 +1302,7 @@ int mmc_init(struct mmc *mmc)
 	err = mmc->init(mmc);
 
 	if (err)
-		return err;
+		goto done;
 
 	mmc_set_bus_width(mmc, 1);
 	mmc_set_clock(mmc, 1);
@@ -1297,7 +1311,7 @@ int mmc_init(struct mmc *mmc)
 	err = mmc_go_idle(mmc);
 
 	if (err)
-		return err;
+		goto done;
 
 	/* The internal partition reset to user partition(0) at every CMD0*/
 	mmc->part_num = 0;
@@ -1313,16 +1327,24 @@ int mmc_init(struct mmc *mmc)
 		err = mmc_send_op_cond(mmc);
 
 		if (err) {
-			printf("Card did not respond to voltage select!\n");
-			return UNUSABLE_ERR;
+			debugf("Card did not respond to voltage select!\n");
+			err = UNUSABLE_ERR;
+			goto done;
 		}
 	}
 
 	err = mmc_startup(mmc);
-	if (err)
+
+done:
+	if (err) {
 		mmc->has_init = 0;
-	else
+		mmc->block_dev.type = DEV_TYPE_UNKNOWN;
+		mmc->block_dev.blksz = 0;
+		mmc->block_dev.lba = 0;
+	} else {
 		mmc->has_init = 1;
+	}
+
 	return err;
 }
 
